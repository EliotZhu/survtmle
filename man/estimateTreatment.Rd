% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimateTreatment.R
\name{estimateTreatment}
\alias{estimateTreatment}
\title{estimateTreatment}
\usage{
estimateTreatment(dat, adjustVars, glm.trt = NULL, SL.trt = NULL,
  returnModels = FALSE, verbose = FALSE, ...)
}
\arguments{
\item{dat}{An object of class \code{data.frame}. Must have named column \code{trt}.}

\item{adjustVars}{An object of class \code{data.frame} that will be used either as the 
\code{data} argument in a call to \code{glm} or as the \code{X} object in a call to 
\code{SuperLearner}.}

\item{glm.trt}{A character formula for the right-hand side of the \code{formula} in a
call to \code{glm}. See \code{?survtmle} for more documentation. Alternatively, 
this could be an object of class \code{glm} (as in calls to this function via 
\code{timepoints}), in which case predictions are obtained using this object
with no new fitting.}

\item{SL.trt}{A valid specification of the \code{SL.library} option of a call to 
\code{SuperLearner}. See \code{?survtmle} for more documentation. Alternatively, 
this could be an object of class \code{SuperLearner} (as in calls to this function via 
\code{timepoints}), in which case predictions are obtained using this object
with no new fitting.}

\item{returnModels}{A boolean indicating whether fitted model objects should be returned.}

\item{verbose}{A boolean passed to the \code{verbose} option of the call to 
\code{SuperLearner}.}

\item{...}{Other arguments. Not currently used}

\item{gtol}{The truncation level of predicted trt probabilities to handle positivity violations.}
}
\value{
dat The input \code{data.frame} object with two added columns corresponding with
the conditional probability (given \code{adjustVars}) of \code{trt==max(trt)} and 
\code{trt==min(trt)}.

trtMod If \code{returnModels = TRUE}, the fitted \code{glm} or \code{SuperLearner}
object. Otherwise, \code{NULL}
}
\description{
This function computes the conditional probability of having \code{trt} for each 
specified level either using \code{glm} or \code{SuperLearner}. 
Currently only two unique values of treatment are acceptable. By default the function
will compute estimates of the condtional probability of \code{trt==max(trt)} and 
compute the probability of \code{trt==min(trt)} as one minus this probability.
}
\examples{
# make fake data frame, the internal call to this function will 
# have more columns, but this is all that is needed for illustration
dat <- data.frame(trt = rbinom(100,1,0.5))
adjustVars <- data.frame(W1 = rnorm(100), W2 = rnorm(100))

# call to estimateTreatment using glm
fit.trt <- estimateTreatment(dat = dat, adjustVars = adjustVars, glm.trt = "W1 + W2")
# head(fit.trt$dat)

# call to estimateTreatment using SuperLearner
fit.trt <- estimateTreatment(dat = dat, adjustVars = adjustVars, 
SL.trt = c("SL.mean","SL.glm","SL.step"))
# head(fit.trt$dat)

}
